// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/markets/v1/ssi_ps.proto

package marketsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SsiPsSnapshot captures a single SSI power-screen (Hose) market snapshot.
type SsiPsSnapshot struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Board               string                 `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	RawSymbol           string                 `protobuf:"bytes,2,opt,name=raw_symbol,json=rawSymbol,proto3" json:"raw_symbol,omitempty"`
	Code                string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Timestamp           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ServerTimestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=server_timestamp,json=serverTimestamp,proto3" json:"server_timestamp,omitempty"`
	BestBid_1           float64                `protobuf:"fixed64,6,opt,name=best_bid_1,json=bestBid1,proto3" json:"best_bid_1,omitempty"`
	BestBid_1Volume     int64                  `protobuf:"varint,7,opt,name=best_bid_1_volume,json=bestBid1Volume,proto3" json:"best_bid_1_volume,omitempty"`
	BestBid_2           float64                `protobuf:"fixed64,8,opt,name=best_bid_2,json=bestBid2,proto3" json:"best_bid_2,omitempty"`
	BestBid_2Volume     int64                  `protobuf:"varint,9,opt,name=best_bid_2_volume,json=bestBid2Volume,proto3" json:"best_bid_2_volume,omitempty"`
	BestBid_3           float64                `protobuf:"fixed64,10,opt,name=best_bid_3,json=bestBid3,proto3" json:"best_bid_3,omitempty"`
	BestBid_3Volume     int64                  `protobuf:"varint,11,opt,name=best_bid_3_volume,json=bestBid3Volume,proto3" json:"best_bid_3_volume,omitempty"`
	BestBid_4           float64                `protobuf:"fixed64,12,opt,name=best_bid_4,json=bestBid4,proto3" json:"best_bid_4,omitempty"`
	BestBid_4Volume     int64                  `protobuf:"varint,13,opt,name=best_bid_4_volume,json=bestBid4Volume,proto3" json:"best_bid_4_volume,omitempty"`
	BestBid_5           float64                `protobuf:"fixed64,14,opt,name=best_bid_5,json=bestBid5,proto3" json:"best_bid_5,omitempty"`
	BestBid_5Volume     int64                  `protobuf:"varint,15,opt,name=best_bid_5_volume,json=bestBid5Volume,proto3" json:"best_bid_5_volume,omitempty"`
	BestBid_6           float64                `protobuf:"fixed64,16,opt,name=best_bid_6,json=bestBid6,proto3" json:"best_bid_6,omitempty"`
	BestBid_6Volume     int64                  `protobuf:"varint,17,opt,name=best_bid_6_volume,json=bestBid6Volume,proto3" json:"best_bid_6_volume,omitempty"`
	BestBid_7           float64                `protobuf:"fixed64,18,opt,name=best_bid_7,json=bestBid7,proto3" json:"best_bid_7,omitempty"`
	BestBid_7Volume     int64                  `protobuf:"varint,19,opt,name=best_bid_7_volume,json=bestBid7Volume,proto3" json:"best_bid_7_volume,omitempty"`
	BestBid_8           float64                `protobuf:"fixed64,20,opt,name=best_bid_8,json=bestBid8,proto3" json:"best_bid_8,omitempty"`
	BestBid_8Volume     int64                  `protobuf:"varint,21,opt,name=best_bid_8_volume,json=bestBid8Volume,proto3" json:"best_bid_8_volume,omitempty"`
	BestBid_9           float64                `protobuf:"fixed64,22,opt,name=best_bid_9,json=bestBid9,proto3" json:"best_bid_9,omitempty"`
	BestBid_9Volume     int64                  `protobuf:"varint,23,opt,name=best_bid_9_volume,json=bestBid9Volume,proto3" json:"best_bid_9_volume,omitempty"`
	BestBid_10          float64                `protobuf:"fixed64,24,opt,name=best_bid_10,json=bestBid10,proto3" json:"best_bid_10,omitempty"`
	BestBid_10Volume    int64                  `protobuf:"varint,25,opt,name=best_bid_10_volume,json=bestBid10Volume,proto3" json:"best_bid_10_volume,omitempty"`
	BestOffer_1         float64                `protobuf:"fixed64,26,opt,name=best_offer_1,json=bestOffer1,proto3" json:"best_offer_1,omitempty"`
	BestOffer_1Volume   int64                  `protobuf:"varint,27,opt,name=best_offer_1_volume,json=bestOffer1Volume,proto3" json:"best_offer_1_volume,omitempty"`
	BestOffer_2         float64                `protobuf:"fixed64,28,opt,name=best_offer_2,json=bestOffer2,proto3" json:"best_offer_2,omitempty"`
	BestOffer_2Volume   int64                  `protobuf:"varint,29,opt,name=best_offer_2_volume,json=bestOffer2Volume,proto3" json:"best_offer_2_volume,omitempty"`
	BestOffer_3         float64                `protobuf:"fixed64,30,opt,name=best_offer_3,json=bestOffer3,proto3" json:"best_offer_3,omitempty"`
	BestOffer_3Volume   int64                  `protobuf:"varint,31,opt,name=best_offer_3_volume,json=bestOffer3Volume,proto3" json:"best_offer_3_volume,omitempty"`
	BestOffer_4         float64                `protobuf:"fixed64,32,opt,name=best_offer_4,json=bestOffer4,proto3" json:"best_offer_4,omitempty"`
	BestOffer_4Volume   int64                  `protobuf:"varint,33,opt,name=best_offer_4_volume,json=bestOffer4Volume,proto3" json:"best_offer_4_volume,omitempty"`
	BestOffer_5         float64                `protobuf:"fixed64,34,opt,name=best_offer_5,json=bestOffer5,proto3" json:"best_offer_5,omitempty"`
	BestOffer_5Volume   int64                  `protobuf:"varint,35,opt,name=best_offer_5_volume,json=bestOffer5Volume,proto3" json:"best_offer_5_volume,omitempty"`
	BestOffer_6         float64                `protobuf:"fixed64,36,opt,name=best_offer_6,json=bestOffer6,proto3" json:"best_offer_6,omitempty"`
	BestOffer_6Volume   int64                  `protobuf:"varint,37,opt,name=best_offer_6_volume,json=bestOffer6Volume,proto3" json:"best_offer_6_volume,omitempty"`
	BestOffer_7         float64                `protobuf:"fixed64,38,opt,name=best_offer_7,json=bestOffer7,proto3" json:"best_offer_7,omitempty"`
	BestOffer_7Volume   int64                  `protobuf:"varint,39,opt,name=best_offer_7_volume,json=bestOffer7Volume,proto3" json:"best_offer_7_volume,omitempty"`
	BestOffer_8         float64                `protobuf:"fixed64,40,opt,name=best_offer_8,json=bestOffer8,proto3" json:"best_offer_8,omitempty"`
	BestOffer_8Volume   int64                  `protobuf:"varint,41,opt,name=best_offer_8_volume,json=bestOffer8Volume,proto3" json:"best_offer_8_volume,omitempty"`
	BestOffer_9         float64                `protobuf:"fixed64,42,opt,name=best_offer_9,json=bestOffer9,proto3" json:"best_offer_9,omitempty"`
	BestOffer_9Volume   int64                  `protobuf:"varint,43,opt,name=best_offer_9_volume,json=bestOffer9Volume,proto3" json:"best_offer_9_volume,omitempty"`
	BestOffer_10        float64                `protobuf:"fixed64,44,opt,name=best_offer_10,json=bestOffer10,proto3" json:"best_offer_10,omitempty"`
	BestOffer_10Volume  int64                  `protobuf:"varint,45,opt,name=best_offer_10_volume,json=bestOffer10Volume,proto3" json:"best_offer_10_volume,omitempty"`
	LastPrice           float64                `protobuf:"fixed64,46,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	HighestPrice        float64                `protobuf:"fixed64,47,opt,name=highest_price,json=highestPrice,proto3" json:"highest_price,omitempty"`
	InstrumentType      string                 `protobuf:"bytes,48,opt,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty"`
	LowestPrice         float64                `protobuf:"fixed64,49,opt,name=lowest_price,json=lowestPrice,proto3" json:"lowest_price,omitempty"`
	ForeignerBuyVolume  int64                  `protobuf:"varint,50,opt,name=foreigner_buy_volume,json=foreignerBuyVolume,proto3" json:"foreigner_buy_volume,omitempty"`
	ForeignerBuyValue   int64                  `protobuf:"varint,51,opt,name=foreigner_buy_value,json=foreignerBuyValue,proto3" json:"foreigner_buy_value,omitempty"`
	ForeignerSellVolume int64                  `protobuf:"varint,52,opt,name=foreigner_sell_volume,json=foreignerSellVolume,proto3" json:"foreigner_sell_volume,omitempty"`
	ForeignerSellValue  int64                  `protobuf:"varint,53,opt,name=foreigner_sell_value,json=foreignerSellValue,proto3" json:"foreigner_sell_value,omitempty"`
	Change              float64                `protobuf:"fixed64,54,opt,name=change,proto3" json:"change,omitempty"`
	TotalMatchVolume    int64                  `protobuf:"varint,55,opt,name=total_match_volume,json=totalMatchVolume,proto3" json:"total_match_volume,omitempty"`
	TotalMatchValue     int64                  `protobuf:"varint,56,opt,name=total_match_value,json=totalMatchValue,proto3" json:"total_match_value,omitempty"`
	TotalBidVolume      int64                  `protobuf:"varint,57,opt,name=total_bid_volume,json=totalBidVolume,proto3" json:"total_bid_volume,omitempty"`
	TotalAskVolume      int64                  `protobuf:"varint,58,opt,name=total_ask_volume,json=totalAskVolume,proto3" json:"total_ask_volume,omitempty"`
	OpenInterest        int64                  `protobuf:"varint,59,opt,name=open_interest,json=openInterest,proto3" json:"open_interest,omitempty"`
	CeilingPrice        float64                `protobuf:"fixed64,60,opt,name=ceiling_price,json=ceilingPrice,proto3" json:"ceiling_price,omitempty"`
	FloorPrice          float64                `protobuf:"fixed64,61,opt,name=floor_price,json=floorPrice,proto3" json:"floor_price,omitempty"`
	ReferencePrice      float64                `protobuf:"fixed64,62,opt,name=reference_price,json=referencePrice,proto3" json:"reference_price,omitempty"`
	ExpireDate          string                 `protobuf:"bytes,63,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	Session             string                 `protobuf:"bytes,64,opt,name=session,proto3" json:"session,omitempty"`
	ForeignRoom         string                 `protobuf:"bytes,65,opt,name=foreign_room,json=foreignRoom,proto3" json:"foreign_room,omitempty"`
	Group               string                 `protobuf:"bytes,66,opt,name=group,proto3" json:"group,omitempty"`
	FloatingShares      int64                  `protobuf:"varint,67,opt,name=floating_shares,json=floatingShares,proto3" json:"floating_shares,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SsiPsSnapshot) Reset() {
	*x = SsiPsSnapshot{}
	mi := &file_proto_markets_v1_ssi_ps_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SsiPsSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsiPsSnapshot) ProtoMessage() {}

func (x *SsiPsSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_markets_v1_ssi_ps_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsiPsSnapshot.ProtoReflect.Descriptor instead.
func (*SsiPsSnapshot) Descriptor() ([]byte, []int) {
	return file_proto_markets_v1_ssi_ps_proto_rawDescGZIP(), []int{0}
}

func (x *SsiPsSnapshot) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *SsiPsSnapshot) GetRawSymbol() string {
	if x != nil {
		return x.RawSymbol
	}
	return ""
}

func (x *SsiPsSnapshot) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SsiPsSnapshot) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SsiPsSnapshot) GetServerTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTimestamp
	}
	return nil
}

func (x *SsiPsSnapshot) GetBestBid_1() float64 {
	if x != nil {
		return x.BestBid_1
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_1Volume() int64 {
	if x != nil {
		return x.BestBid_1Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_2() float64 {
	if x != nil {
		return x.BestBid_2
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_2Volume() int64 {
	if x != nil {
		return x.BestBid_2Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_3() float64 {
	if x != nil {
		return x.BestBid_3
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_3Volume() int64 {
	if x != nil {
		return x.BestBid_3Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_4() float64 {
	if x != nil {
		return x.BestBid_4
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_4Volume() int64 {
	if x != nil {
		return x.BestBid_4Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_5() float64 {
	if x != nil {
		return x.BestBid_5
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_5Volume() int64 {
	if x != nil {
		return x.BestBid_5Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_6() float64 {
	if x != nil {
		return x.BestBid_6
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_6Volume() int64 {
	if x != nil {
		return x.BestBid_6Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_7() float64 {
	if x != nil {
		return x.BestBid_7
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_7Volume() int64 {
	if x != nil {
		return x.BestBid_7Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_8() float64 {
	if x != nil {
		return x.BestBid_8
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_8Volume() int64 {
	if x != nil {
		return x.BestBid_8Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_9() float64 {
	if x != nil {
		return x.BestBid_9
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_9Volume() int64 {
	if x != nil {
		return x.BestBid_9Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_10() float64 {
	if x != nil {
		return x.BestBid_10
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestBid_10Volume() int64 {
	if x != nil {
		return x.BestBid_10Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_1() float64 {
	if x != nil {
		return x.BestOffer_1
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_1Volume() int64 {
	if x != nil {
		return x.BestOffer_1Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_2() float64 {
	if x != nil {
		return x.BestOffer_2
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_2Volume() int64 {
	if x != nil {
		return x.BestOffer_2Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_3() float64 {
	if x != nil {
		return x.BestOffer_3
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_3Volume() int64 {
	if x != nil {
		return x.BestOffer_3Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_4() float64 {
	if x != nil {
		return x.BestOffer_4
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_4Volume() int64 {
	if x != nil {
		return x.BestOffer_4Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_5() float64 {
	if x != nil {
		return x.BestOffer_5
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_5Volume() int64 {
	if x != nil {
		return x.BestOffer_5Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_6() float64 {
	if x != nil {
		return x.BestOffer_6
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_6Volume() int64 {
	if x != nil {
		return x.BestOffer_6Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_7() float64 {
	if x != nil {
		return x.BestOffer_7
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_7Volume() int64 {
	if x != nil {
		return x.BestOffer_7Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_8() float64 {
	if x != nil {
		return x.BestOffer_8
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_8Volume() int64 {
	if x != nil {
		return x.BestOffer_8Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_9() float64 {
	if x != nil {
		return x.BestOffer_9
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_9Volume() int64 {
	if x != nil {
		return x.BestOffer_9Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_10() float64 {
	if x != nil {
		return x.BestOffer_10
	}
	return 0
}

func (x *SsiPsSnapshot) GetBestOffer_10Volume() int64 {
	if x != nil {
		return x.BestOffer_10Volume
	}
	return 0
}

func (x *SsiPsSnapshot) GetLastPrice() float64 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *SsiPsSnapshot) GetHighestPrice() float64 {
	if x != nil {
		return x.HighestPrice
	}
	return 0
}

func (x *SsiPsSnapshot) GetInstrumentType() string {
	if x != nil {
		return x.InstrumentType
	}
	return ""
}

func (x *SsiPsSnapshot) GetLowestPrice() float64 {
	if x != nil {
		return x.LowestPrice
	}
	return 0
}

func (x *SsiPsSnapshot) GetForeignerBuyVolume() int64 {
	if x != nil {
		return x.ForeignerBuyVolume
	}
	return 0
}

func (x *SsiPsSnapshot) GetForeignerBuyValue() int64 {
	if x != nil {
		return x.ForeignerBuyValue
	}
	return 0
}

func (x *SsiPsSnapshot) GetForeignerSellVolume() int64 {
	if x != nil {
		return x.ForeignerSellVolume
	}
	return 0
}

func (x *SsiPsSnapshot) GetForeignerSellValue() int64 {
	if x != nil {
		return x.ForeignerSellValue
	}
	return 0
}

func (x *SsiPsSnapshot) GetChange() float64 {
	if x != nil {
		return x.Change
	}
	return 0
}

func (x *SsiPsSnapshot) GetTotalMatchVolume() int64 {
	if x != nil {
		return x.TotalMatchVolume
	}
	return 0
}

func (x *SsiPsSnapshot) GetTotalMatchValue() int64 {
	if x != nil {
		return x.TotalMatchValue
	}
	return 0
}

func (x *SsiPsSnapshot) GetTotalBidVolume() int64 {
	if x != nil {
		return x.TotalBidVolume
	}
	return 0
}

func (x *SsiPsSnapshot) GetTotalAskVolume() int64 {
	if x != nil {
		return x.TotalAskVolume
	}
	return 0
}

func (x *SsiPsSnapshot) GetOpenInterest() int64 {
	if x != nil {
		return x.OpenInterest
	}
	return 0
}

func (x *SsiPsSnapshot) GetCeilingPrice() float64 {
	if x != nil {
		return x.CeilingPrice
	}
	return 0
}

func (x *SsiPsSnapshot) GetFloorPrice() float64 {
	if x != nil {
		return x.FloorPrice
	}
	return 0
}

func (x *SsiPsSnapshot) GetReferencePrice() float64 {
	if x != nil {
		return x.ReferencePrice
	}
	return 0
}

func (x *SsiPsSnapshot) GetExpireDate() string {
	if x != nil {
		return x.ExpireDate
	}
	return ""
}

func (x *SsiPsSnapshot) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *SsiPsSnapshot) GetForeignRoom() string {
	if x != nil {
		return x.ForeignRoom
	}
	return ""
}

func (x *SsiPsSnapshot) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *SsiPsSnapshot) GetFloatingShares() int64 {
	if x != nil {
		return x.FloatingShares
	}
	return 0
}

var File_proto_markets_v1_ssi_ps_proto protoreflect.FileDescriptor

const file_proto_markets_v1_ssi_ps_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/markets/v1/ssi_ps.proto\x12\n" +
	"markets.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb4\x14\n" +
	"\rSsiPsSnapshot\x12\x14\n" +
	"\x05board\x18\x01 \x01(\tR\x05board\x12\x1d\n" +
	"\n" +
	"raw_symbol\x18\x02 \x01(\tR\trawSymbol\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12E\n" +
	"\x10server_timestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0fserverTimestamp\x12\x1c\n" +
	"\n" +
	"best_bid_1\x18\x06 \x01(\x01R\bbestBid1\x12)\n" +
	"\x11best_bid_1_volume\x18\a \x01(\x03R\x0ebestBid1Volume\x12\x1c\n" +
	"\n" +
	"best_bid_2\x18\b \x01(\x01R\bbestBid2\x12)\n" +
	"\x11best_bid_2_volume\x18\t \x01(\x03R\x0ebestBid2Volume\x12\x1c\n" +
	"\n" +
	"best_bid_3\x18\n" +
	" \x01(\x01R\bbestBid3\x12)\n" +
	"\x11best_bid_3_volume\x18\v \x01(\x03R\x0ebestBid3Volume\x12\x1c\n" +
	"\n" +
	"best_bid_4\x18\f \x01(\x01R\bbestBid4\x12)\n" +
	"\x11best_bid_4_volume\x18\r \x01(\x03R\x0ebestBid4Volume\x12\x1c\n" +
	"\n" +
	"best_bid_5\x18\x0e \x01(\x01R\bbestBid5\x12)\n" +
	"\x11best_bid_5_volume\x18\x0f \x01(\x03R\x0ebestBid5Volume\x12\x1c\n" +
	"\n" +
	"best_bid_6\x18\x10 \x01(\x01R\bbestBid6\x12)\n" +
	"\x11best_bid_6_volume\x18\x11 \x01(\x03R\x0ebestBid6Volume\x12\x1c\n" +
	"\n" +
	"best_bid_7\x18\x12 \x01(\x01R\bbestBid7\x12)\n" +
	"\x11best_bid_7_volume\x18\x13 \x01(\x03R\x0ebestBid7Volume\x12\x1c\n" +
	"\n" +
	"best_bid_8\x18\x14 \x01(\x01R\bbestBid8\x12)\n" +
	"\x11best_bid_8_volume\x18\x15 \x01(\x03R\x0ebestBid8Volume\x12\x1c\n" +
	"\n" +
	"best_bid_9\x18\x16 \x01(\x01R\bbestBid9\x12)\n" +
	"\x11best_bid_9_volume\x18\x17 \x01(\x03R\x0ebestBid9Volume\x12\x1e\n" +
	"\vbest_bid_10\x18\x18 \x01(\x01R\tbestBid10\x12+\n" +
	"\x12best_bid_10_volume\x18\x19 \x01(\x03R\x0fbestBid10Volume\x12 \n" +
	"\fbest_offer_1\x18\x1a \x01(\x01R\n" +
	"bestOffer1\x12-\n" +
	"\x13best_offer_1_volume\x18\x1b \x01(\x03R\x10bestOffer1Volume\x12 \n" +
	"\fbest_offer_2\x18\x1c \x01(\x01R\n" +
	"bestOffer2\x12-\n" +
	"\x13best_offer_2_volume\x18\x1d \x01(\x03R\x10bestOffer2Volume\x12 \n" +
	"\fbest_offer_3\x18\x1e \x01(\x01R\n" +
	"bestOffer3\x12-\n" +
	"\x13best_offer_3_volume\x18\x1f \x01(\x03R\x10bestOffer3Volume\x12 \n" +
	"\fbest_offer_4\x18  \x01(\x01R\n" +
	"bestOffer4\x12-\n" +
	"\x13best_offer_4_volume\x18! \x01(\x03R\x10bestOffer4Volume\x12 \n" +
	"\fbest_offer_5\x18\" \x01(\x01R\n" +
	"bestOffer5\x12-\n" +
	"\x13best_offer_5_volume\x18# \x01(\x03R\x10bestOffer5Volume\x12 \n" +
	"\fbest_offer_6\x18$ \x01(\x01R\n" +
	"bestOffer6\x12-\n" +
	"\x13best_offer_6_volume\x18% \x01(\x03R\x10bestOffer6Volume\x12 \n" +
	"\fbest_offer_7\x18& \x01(\x01R\n" +
	"bestOffer7\x12-\n" +
	"\x13best_offer_7_volume\x18' \x01(\x03R\x10bestOffer7Volume\x12 \n" +
	"\fbest_offer_8\x18( \x01(\x01R\n" +
	"bestOffer8\x12-\n" +
	"\x13best_offer_8_volume\x18) \x01(\x03R\x10bestOffer8Volume\x12 \n" +
	"\fbest_offer_9\x18* \x01(\x01R\n" +
	"bestOffer9\x12-\n" +
	"\x13best_offer_9_volume\x18+ \x01(\x03R\x10bestOffer9Volume\x12\"\n" +
	"\rbest_offer_10\x18, \x01(\x01R\vbestOffer10\x12/\n" +
	"\x14best_offer_10_volume\x18- \x01(\x03R\x11bestOffer10Volume\x12\x1d\n" +
	"\n" +
	"last_price\x18. \x01(\x01R\tlastPrice\x12#\n" +
	"\rhighest_price\x18/ \x01(\x01R\fhighestPrice\x12'\n" +
	"\x0finstrument_type\x180 \x01(\tR\x0einstrumentType\x12!\n" +
	"\flowest_price\x181 \x01(\x01R\vlowestPrice\x120\n" +
	"\x14foreigner_buy_volume\x182 \x01(\x03R\x12foreignerBuyVolume\x12.\n" +
	"\x13foreigner_buy_value\x183 \x01(\x03R\x11foreignerBuyValue\x122\n" +
	"\x15foreigner_sell_volume\x184 \x01(\x03R\x13foreignerSellVolume\x120\n" +
	"\x14foreigner_sell_value\x185 \x01(\x03R\x12foreignerSellValue\x12\x16\n" +
	"\x06change\x186 \x01(\x01R\x06change\x12,\n" +
	"\x12total_match_volume\x187 \x01(\x03R\x10totalMatchVolume\x12*\n" +
	"\x11total_match_value\x188 \x01(\x03R\x0ftotalMatchValue\x12(\n" +
	"\x10total_bid_volume\x189 \x01(\x03R\x0etotalBidVolume\x12(\n" +
	"\x10total_ask_volume\x18: \x01(\x03R\x0etotalAskVolume\x12#\n" +
	"\ropen_interest\x18; \x01(\x03R\fopenInterest\x12#\n" +
	"\rceiling_price\x18< \x01(\x01R\fceilingPrice\x12\x1f\n" +
	"\vfloor_price\x18= \x01(\x01R\n" +
	"floorPrice\x12'\n" +
	"\x0freference_price\x18> \x01(\x01R\x0ereferencePrice\x12\x1f\n" +
	"\vexpire_date\x18? \x01(\tR\n" +
	"expireDate\x12\x18\n" +
	"\asession\x18@ \x01(\tR\asession\x12!\n" +
	"\fforeign_room\x18A \x01(\tR\vforeignRoom\x12\x14\n" +
	"\x05group\x18B \x01(\tR\x05group\x12'\n" +
	"\x0ffloating_shares\x18C \x01(\x03R\x0efloatingSharesB3Z1github.com/future-bots/proto/markets/v1;marketsv1b\x06proto3"

var (
	file_proto_markets_v1_ssi_ps_proto_rawDescOnce sync.Once
	file_proto_markets_v1_ssi_ps_proto_rawDescData []byte
)

func file_proto_markets_v1_ssi_ps_proto_rawDescGZIP() []byte {
	file_proto_markets_v1_ssi_ps_proto_rawDescOnce.Do(func() {
		file_proto_markets_v1_ssi_ps_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_markets_v1_ssi_ps_proto_rawDesc), len(file_proto_markets_v1_ssi_ps_proto_rawDesc)))
	})
	return file_proto_markets_v1_ssi_ps_proto_rawDescData
}

var file_proto_markets_v1_ssi_ps_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_markets_v1_ssi_ps_proto_goTypes = []any{
	(*SsiPsSnapshot)(nil),         // 0: markets.v1.SsiPsSnapshot
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_proto_markets_v1_ssi_ps_proto_depIdxs = []int32{
	1, // 0: markets.v1.SsiPsSnapshot.timestamp:type_name -> google.protobuf.Timestamp
	1, // 1: markets.v1.SsiPsSnapshot.server_timestamp:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_markets_v1_ssi_ps_proto_init() }
func file_proto_markets_v1_ssi_ps_proto_init() {
	if File_proto_markets_v1_ssi_ps_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_markets_v1_ssi_ps_proto_rawDesc), len(file_proto_markets_v1_ssi_ps_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_markets_v1_ssi_ps_proto_goTypes,
		DependencyIndexes: file_proto_markets_v1_ssi_ps_proto_depIdxs,
		MessageInfos:      file_proto_markets_v1_ssi_ps_proto_msgTypes,
	}.Build()
	File_proto_markets_v1_ssi_ps_proto = out.File
	file_proto_markets_v1_ssi_ps_proto_goTypes = nil
	file_proto_markets_v1_ssi_ps_proto_depIdxs = nil
}
